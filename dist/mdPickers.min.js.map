{"version":3,"sources":["mdPickers.min.js"],"names":["DatePickerCtrl","$scope","$mdDialog","$mdMedia","$timeout","currentDate","options","self","this","date","moment","minDate","isValid","maxDate","displayFormat","dateFilter","angular","isFunction","selectingYear","isBefore","add","isAfter","yearItems","currentIndex_","PAGE_SIZE","START","year","END","getItemAtIndex","index","getLength","Math","min","floor","abs","selectYear","animate","showYear","yearTopIndex","showCalendar","cancel","confirm","hide","toDate","animating","noop","then","CalendarCtrl","dow","localeData","firstDayOfWeek","weekDays","concat","weekdaysMin","slice","daysInMonth","getDaysInMonth","days","firstDay","day","length","arr","i","value","enabled","isDayEnabled","push","selectDate","dom","nextMonth","prevMonth","subtract","updateDaysInMonth","$watch","unix","newValue","oldValue","formatValidator","format","isDate","minDateValidator","maxDateValidator","filterValidator","filter","TimePickerCtrl","time","autoSwitch","VIEW_HOURS","VIEW_MINUTES","currentView","console","log","clockHours","parseInt","clockMinutes","minutes","switchView","setAM","hours","hour","setPM","ClockCtrl","TYPE_HOURS","TYPE_MINUTES","STEP_DEG","steps","CLOCK_TYPES","range","getPointerStyle","divider","type","degrees","round","selected","-webkit-transform","-ms-transform","transform","setTimeByDeg","deg","setTime","init","module","config","$mdIconProvider","mdpIconsRegistry","forEach","icon","id","url","run","$templateCache","put","svg","constant","directive","$mdUtil","restrict","priority","compile","element","inputContainer","getClosest","toggleClass","provider","LABEL_OK","LABEL_CANCEL","DISPLAY_FORMAT","setDisplayFormat","setOKButtonLabel","label","setCancelButtonLabel","$get","datePicker","Date","now","isObject","show","controller","controllerAs","clickOutsideToClose","template","targetEvent","locals","skipHide","$animate","bindToController","link","scope","attrs","ctrl","animElements","querySelector","map","a","direction","addClass","removeClass","$mdpDatePicker","require","transclude","noFloat","isDefined","mdpNoFloat","placeholder","mdpPlaceholder","openOnClick","mdpOpenOnClick","dateFormat","pre","ngModel","$transclude","post","updateInputElement","inputElement","size","inputContainerCtrl","setHasValue","$isEmpty","updateDate","strValue","$setViewValue","$pristine","messages","hasClass","$render","onInputElementEvents","event","target","$viewVaue","clone","append","model","isError","$invalid","$formatters","unshift","$validators","modelValue","viewValue","$parsers","parsed","$modelValue","originalModel","month","showPicker","ev","on","$on","off","replace","timepickerCtrl","$parent","timepicker","onEvent","containerCoords","currentTarget","getClientRects","x","offsetWidth","pageX","left","y","pageY","top","offsetHeight","atan2","PI","indexOf","e","timePicker","$mdpTimePicker","timeFormat","$valid","updateTime","$error","setInvalid","Object","keys","seconds"],"mappings":"CAAA,WACA,YA8DA,SAASA,GAAeC,EAAQC,EAAWC,EAAUC,EAAUC,EAAaC,GACxE,GAAIC,GAAOC,IAEXA,MAAKC,KAAOC,OAAOL,GACnBG,KAAKG,QAAUL,EAAQK,SAAWD,OAAOJ,EAAQK,SAASC,UAAYF,OAAOJ,EAAQK,SAAW,KAChGH,KAAKK,QAAUP,EAAQO,SAAWH,OAAOJ,EAAQO,SAASD,UAAYF,OAAOJ,EAAQO,SAAW,KAChGL,KAAKM,cAAgBR,EAAQQ,eAAiB,cAC9CN,KAAKO,WAAaC,QAAQC,WAAWX,EAAQS,YAAcT,EAAQS,WAAa,KAChFP,KAAKU,eAAgB,EAGpBV,KAAKG,SAAWH,KAAKK,SACpBL,KAAKK,QAAQM,SAASX,KAAKG,WAC9BH,KAAKK,QAAUH,OAAOF,KAAKG,SAASS,IAAI,EAAG,SAIzCZ,KAAKC,OAEDD,KAAKG,SAAWH,KAAKC,KAAKU,SAASX,KAAKG,WAC9CH,KAAKC,KAAOC,OAAOF,KAAKG,UAIlBH,KAAKK,SAAWL,KAAKC,KAAKY,QAAQb,KAAKK,WAC7CL,KAAKC,KAAOC,OAAOF,KAAKK,WAI1BL,KAAKc,WACEC,cAAe,EACfC,UAAW,EACXC,MAAQlB,EAAKI,QAAUJ,EAAKI,QAAQe,OAAS,KAC7CC,IAAMpB,EAAKM,QAAUN,EAAKM,QAAQa,OAAS,EAC3CE,eAAgB,SAASC,GAIxB,MAHGrB,MAAKe,cAAgBM,IACjBrB,KAAKe,cAAgBM,GAErBrB,KAAKiB,MAAQI,GAErBC,UAAW,WACP,MAAOC,MAAKC,IACRxB,KAAKe,cAAgBQ,KAAKE,MAAMzB,KAAKgB,UAAY,GACjDO,KAAKG,IAAI1B,KAAKiB,MAAQjB,KAAKmB,KAAO,KAK9C1B,EAAOE,SAAWA,EAClBF,EAAOyB,KAAOlB,KAAKC,KAAKiB,OAE3BlB,KAAK2B,WAAa,SAAST,GACpBnB,EAAKE,KAAKiB,KAAKA,GACfzB,EAAOyB,KAAOA,EACdnB,EAAKW,eAAgB,EACrBX,EAAK6B,WAGT5B,KAAK6B,SAAW,WACZ9B,EAAK+B,aAAgB/B,EAAKE,KAAKiB,OAASnB,EAAKe,UAAUG,MAASM,KAAKE,MAAM1B,EAAKe,UAAUE,UAAY,GACtGjB,EAAKe,UAAUC,cAAiBhB,EAAKE,KAAKiB,OAASnB,EAAKe,UAAUG,MAAS,EAC3ElB,EAAKW,eAAgB,GAGzBV,KAAK+B,aAAe,WAChBhC,EAAKW,eAAgB,GAGzBV,KAAKgC,OAAS,WACVtC,EAAUsC,UAGdhC,KAAKiC,QAAU,WACd,GAAIhC,GAAOD,KAAKC,IAEZD,MAAKG,SAAWH,KAAKC,KAAKU,SAASX,KAAKG,WAC3CF,EAAOC,OAAOF,KAAKG,UAGhBH,KAAKK,SAAWL,KAAKC,KAAKY,QAAQb,KAAKK,WAC1CJ,EAAOC,OAAOF,KAAKK,UAGjBX,EAAUwC,KAAKjC,EAAKkC,WAGxBnC,KAAK4B,QAAU,WACX7B,EAAKqC,WAAY,EACjBxC,EAASY,QAAQ6B,MAAMC,KAAK,WACxBvC,EAAKqC,WAAY,KAuE7B,QAASG,GAAa9C,GACrB,GAAIM,GAAOC,IACXA,MAAKwC,IAAMtC,OAAOuC,aAAaC,iBAE5B1C,KAAK2C,YAAcC,OACf1C,OAAO2C,cAAcC,MACjB9C,KAAKwC,KAETtC,OAAO2C,cAAcC,MACjB,EACA9C,KAAKwC,MAIbxC,KAAK+C,eAEL/C,KAAKgD,eAAiB,WAClB,GAAIC,GAAOlD,EAAKE,KAAK8C,cACjBG,EAAWhD,OAAOH,EAAKE,MAAMA,KAAK,GAAGkD,MAAQnD,KAAKwC,GAExC,GAAXU,IAAcA,EAAWlD,KAAK2C,SAASS,OAAS,EAInD,KAAI,GADAC,MACIC,EAAI,EAASJ,EAAWD,GAAjBK,EAAwBA,IAAK,CACxC,GAAIH,GAAM,IACPG,GAAIJ,IACHC,GACII,MAAQD,EAAIJ,EACZM,QAASzD,EAAK0D,aAAavD,OAAOH,EAAKE,MAAMA,KAAKqD,EAAIJ,GAAUf,YAGxEkB,EAAIK,KAAKP,GAGb,MAAOE,IAGXrD,KAAKyD,aAAe,SAASN,GACzB,QAASnD,KAAKG,WAAWH,KAAKG,SAAWgD,IACnCnD,KAAKK,WAAWL,KAAKK,SAAW8C,IAChCpD,EAAKQ,YAAeR,EAAKQ,WAAW4C,KAG9CnD,KAAK2D,WAAa,SAASC,GACvB7D,EAAKE,KAAKA,KAAK2D,IAGnB5D,KAAK6D,UAAY,WACb9D,EAAKE,KAAKW,IAAI,EAAG,WAGrBZ,KAAK8D,UAAY,WACb/D,EAAKE,KAAK8D,SAAS,EAAG,WAG1B/D,KAAKgE,kBAAoB,WACrBjE,EAAKgD,YAAchD,EAAKiD,kBAG5BvD,EAAOwE,OAAO,WAAa,MAAQlE,GAAKE,KAAKiE,QAAU,SAASC,EAAUC,GACnED,GAAYA,IAAaC,GACxBrE,EAAKiE,sBAGbjE,EAAKiE,oBA0DT,QAASK,GAAgBd,EAAOe,GAC5B,OAAQf,GAAS/C,QAAQ+D,OAAOhB,IAAUrD,OAAOqD,EAAOe,GAAQ,GAAMlE,UAG1E,QAASoE,GAAiBjB,EAAOe,EAAQnE,GACrC,GAAIA,GAAUD,OAAOC,EAAS,cAAc,GACxCF,EAAOO,QAAQ+D,OAAOhB,GAASrD,OAAOqD,GAAUrD,OAAOqD,EAAOe,GAAQ,EAE1E,QAAQf,GACA/C,QAAQ+D,OAAOhB,KACdpD,EAAQC,WACTH,EAAKY,QAAQV,GAGzB,QAASsE,GAAiBlB,EAAOe,EAAQjE,GACrC,GAAIA,GAAUH,OAAOG,EAAS,cAAc,GACxCJ,EAAOO,QAAQ+D,OAAOhB,GAASrD,OAAOqD,GAAUrD,OAAOqD,EAAOe,GAAQ,EAE1E,QAAQf,GACA/C,QAAQ+D,OAAOhB,KACdlD,EAAQD,WACTH,EAAKU,SAASN,GAG1B,QAASqE,GAAgBnB,EAAOe,EAAQK,GACpC,GAAI1E,GAAOO,QAAQ+D,OAAOhB,GAASrD,OAAOqD,GAAUrD,OAAOqD,EAAOe,GAAQ,EAE1E,QAAQf,GACA/C,QAAQ+D,OAAOhB,KACd/C,QAAQC,WAAWkE,IACpBA,EAAO1E,GAwMnB,QAAS2E,GAAenF,EAAQC,EAAWmF,EAAMC,EAAYnF,GAC5D,GAAII,GAAOC,IACRA,MAAK+E,WAAa,EAClB/E,KAAKgF,aAAe,EACpBhF,KAAKiF,YAAcjF,KAAK+E,WACxB/E,KAAK6E,KAAO3E,OAAO2E,GACnB7E,KAAK8E,aAAeA,EACpBI,QAAQC,IAAIL,GAEZ9E,KAAKoF,WAAaC,SAASrF,KAAK6E,KAAKP,OAAO,MAC5CtE,KAAKsF,aAAeD,SAASrF,KAAK6E,KAAKU,WAE1C9F,EAAOE,SAAWA,EAElBK,KAAKwF,WAAa,WACdzF,EAAKkF,YAAclF,EAAKkF,aAAelF,EAAKgF,WAAahF,EAAKiF,aAAejF,EAAKgF,YAGtF/E,KAAKyF,MAAQ,WACH1F,EAAK8E,KAAKa,SAAW,IACpB3F,EAAK8E,KAAKc,KAAK5F,EAAK8E,KAAKc,OAAS,KAG1C3F,KAAK4F,MAAQ,WACN7F,EAAK8E,KAAKa,QAAU,IACnB3F,EAAK8E,KAAKc,KAAK5F,EAAK8E,KAAKc,OAAS,KAG1C3F,KAAKgC,OAAS,WACVtC,EAAUsC,UAGdhC,KAAKiC,QAAU,WACXvC,EAAUwC,KAAKlC,KAAK6E,KAAK1C,WAIjC,QAAS0D,GAAUpG,GACf,GAAIqG,GAAa,QACbC,EAAe,UACfhG,EAAOC,IAEXA,MAAKgG,SAAW,GAChBhG,KAAKiG,SAELjG,KAAKkG,aACDR,OACIS,MAAO,IAEXZ,SACIY,MAAO,KAIfnG,KAAKoG,gBAAkB,WACnB,GAAIC,GAAU,CACd,QAAOtG,EAAKuG,MACR,IAAKR,GACDO,EAAU,EACV,MACJ,KAAKN,GACDM,EAAU,GAGlB,GAAIE,GAAUhF,KAAKiF,MAAMzG,EAAK0G,UAAY,IAAMJ,IAAY,GAC5D,QACIK,oBAAqB,UAAYH,EAAU,OAC3CI,gBAAiB,UAAYJ,EAAU,OACvCK,UAAa,UAAYL,EAAU,SAI3CvG,KAAK6G,aAAe,SAASC,GACzBA,EAAMA,GAAO,IAAM,EAAIA,CACvB,IAAIT,GAAU,CACd,QAAOtG,EAAKuG,MACR,IAAKR,GACDO,EAAU,EACV,MACJ,KAAKN,GACDM,EAAU,GAIlBtG,EAAKgH,QACDxF,KAAKiF,MAAMH,EAAU,IAAMS,KAInC9G,KAAK+G,QAAU,SAASlC,EAAMyB,GAG1B,OAFAtG,KAAKyG,SAAW5B,EAET9E,EAAKuG,MACR,IAAKR,GAC2B,MAAzB/F,EAAK8E,KAAKP,OAAO,OAAcO,GAAQ,IAC1C7E,KAAK6E,KAAKa,MAAMb,EAChB,MACJ,KAAKkB,GACElB,EAAO,KAAIA,GAAQ,IACtB7E,KAAK6E,KAAKU,QAAQV,KAM9B7E,KAAKgH,KAAO,WAER,OADAjH,EAAKuG,KAAOvG,EAAKuG,MAAQ,QAClBvG,EAAKuG,MACR,IAAKR,GACD,IAAI,GAAIxC,GAAI,EAAQ,IAALA,EAASA,IACpBvD,EAAKkG,MAAMvC,KAAKJ,EACpBvD,GAAK0G,SAAW1G,EAAK8E,KAAKa,SAAW,EAClC3F,EAAK0G,SAAW,KAAI1G,EAAK0G,UAAY,GAExC,MACJ,KAAKV,GACD,IAAI,GAAIzC,GAAI,EAAQ,IAALA,EAASA,GAAG,EACvBvD,EAAKkG,MAAMvC,KAAKJ,EACpBvD,GAAKkG,MAAMvC,KAAK,GAChB3D,EAAK0G,SAAW1G,EAAK8E,KAAKU,WAAa,IAMnDvF,KAAKgH,OAzrBT,GAAIC,GAASzG,QAAQyG,OAAO,aAC3B,aACA,YACA,UAGDA,GAAOC,QAAQ,kBAAmB,mBAAoB,SAASC,EAAiBC,GAC/E5G,QAAQ6G,QAAQD,EAAkB,SAASE,EAAMjG,GAChD8F,EAAgBG,KAAKA,EAAKC,GAAID,EAAKE,UAIrCP,EAAOQ,KAAK,iBAAkB,mBAAoB,SAASC,EAAgBN,GAC1E5G,QAAQ6G,QAAQD,EAAkB,SAASE,EAAMjG,GAChDqG,EAAeC,IAAIL,EAAKE,IAAKF,EAAKM,UAGpCX,EAAOY,SAAS,qBAERN,GAAI,mBACJC,IAAK,uBACLI,IAAK,4LAGLL,GAAI,oBACJC,IAAK,wBACLI,IAAK,6LAGLL,GAAI,kBACJC,IAAK,sBACLI,IAAK,kVAGLL,GAAI,YACJC,IAAK,gBACLI,IAAK,wRAGbX,EAAOa,UAAU,aAAc,UAAW,SAASC,GAChD,OACKC,SAAU,KACVC,SAAU,IACVC,QAAS,SAASC,GACd,GAAIC,GAAiBL,EAAQM,WAAWF,EAAS,mBAAmB,IAC/CJ,EAAQM,WAAWF,EAAS,mBAAmB,EAGpE,IAAKC,EAKL,MAFAD,GAAQG,YAAY,8BAA8B,WAsG9DrB,EAAOsB,SAAS,iBAAkB,WAC9B,GAAIC,GAAW,KACXC,EAAe,SACfC,EAAiB,aAErB1I,MAAK2I,iBAAmB,SAASrE,GAC7BoE,EAAiBpE,GAGrBtE,KAAK4I,iBAAmB,SAASC,GAC7BL,EAAWK,GAGf7I,KAAK8I,qBAAuB,SAASD,GACjCJ,EAAeI,GAGnB7I,KAAK+I,MAAQ,YAAa,SAASrJ,GAC/B,GAAIsJ,GAAa,SAASnJ,EAAaC,GAMnC,MALKU,SAAQ+D,OAAO1E,KAAcA,EAAcoJ,KAAKC,OAChD1I,QAAQ2I,SAASrJ,KAAUA,MAEhCA,EAAQQ,cAAgBoI,EAEjBhJ,EAAU0J,MACbC,YAAc,SAAU,YAAa,WAAY,WAAY,cAAe,UAAW7J,GACvF8J,aAAc,aACdC,qBAAqB,EACrBC,SAAU,09CAmByEf,EAAe,KAAOA,EAAe,yFACjBD,EAAW,KAAOA,EAAW,yEAKpIiB,YAAa3J,EAAQ2J,YACrBC,QACI7J,YAAaA,EACbC,QAASA,GAEb6J,UAAU,IAIlB,OAAOX,OAwEf/B,EAAOa,UAAU,eAAgB,WAAY,SAAS8B,GAClD,OACI5B,SAAU,IACV6B,kBACI5J,KAAQ,IACRE,QAAW,IACXE,QAAW,IACXE,WAAc,KAElBiJ,SAAU,26CAgBVH,YAAa,SAAU9G,GACvB+G,aAAc,WACdQ,KAAM,SAASC,EAAO5B,EAAS6B,EAAOC,GAClC,GAAIC,IACA/B,EAAQ,GAAGgC,cAAc,2BACzBhC,EAAQ,GAAGgC,cAAc,sBACzBhC,EAAQ,GAAGgC,cAAc,4BAC3BC,IAAI,SAASC,GACZ,MAAO7J,SAAQ2H,QAAQkC,IAG1BN,GAAM9F,OAAO,WAAa,MAAQgG,GAAKhK,KAAKqE,OAAO,WAAa,SAASH,EAAUC,GAC/E,GAAIkG,GAAY,IAOhB,IALGnG,EAAWC,EACVkG,EAAY,mBACGlG,EAAXD,IACJmG,EAAY,oBAEbA,EACC,IAAI,GAAIhH,KAAK4G,GACTA,EAAa5G,GAAGiH,SAASD,GACzBV,EAASY,YAAYN,EAAa5G,GAAIgH,UAyC9DrD,EAAOa,UAAU,iBAAkB,iBAAkB,WAAY,SAAS2C,EAAgB7K,GACtF,OACIoI,SAAU,IACV0C,QAAS,UACTC,YAAY,EACZnB,SAAU,SAASrB,EAAS6B,GACxB,GAAIY,GAAUpK,QAAQqK,UAAUb,EAAMc,YAClCC,EAAcvK,QAAQqK,UAAUb,EAAMgB,gBAAkBhB,EAAMgB,eAAiB,GAC/EC,IAAczK,QAAQqK,UAAUb,EAAMkB,eAE1C,OAAO,qLAI0BN,EAAU,eAAiB,IAAM,mEACVG,EAAc,kBAAoBA,EAAc,KAAOE,EAAc,kCAAoC,IAAM,kCAI3KlB,OACI5J,QAAW,cACXE,QAAW,cACXE,WAAc,iBACd4K,WAAc,aACdJ,YAAe,kBACfH,QAAW,cACXK,YAAe,mBAEnBnB,MACIsB,IAAK,SAASrB,EAAO5B,EAAS6B,EAAOqB,EAASC,KAG9CC,KAAM,SAASxB,EAAO5B,EAAS6B,EAAOqB,EAASC,GA6D3C,QAASE,GAAmBjI,GACpBA,GACAkI,EAAa,GAAGC,KAAOnI,EAAMH,OAAS,EACtCqI,EAAa,GAAGlI,MAAQA,GAExBkI,EAAa,GAAGlI,MAAQ,GAC5BoI,EAAmBC,aAAaP,EAAQQ,SAAStI,IAGrD,QAASuI,GAAW7L,GAChB,GAAIsD,GAAQrD,OAAOD,EAAMO,QAAQ+D,OAAOtE,GAAQ,KAAO8J,EAAMoB,YAAY,GACrEY,EAAWxI,EAAMe,OAAOyF,EAAMoB,WAE/B5H,GAAMnD,WACLoL,EAAmBO,GACnBV,EAAQW,cAAcD,KAEtBP,EAAmBvL,GACnBoL,EAAQW,cAAc/L,KAGtBoL,EAAQY,WACRC,EAASC,SAAS,iBAClB/D,EAAe+D,SAAS,qBAAqBD,EAAS1B,YAAY,gBAEtEa,EAAQe,UAYZ,QAASC,GAAqBC,GACvBA,EAAMC,OAAOhJ,QAAU8H,EAAQmB,WAC9BV,EAAWQ,EAAMC,OAAOhJ,OAnGhC,GAAIkI,GAAejL,QAAQ2H,QAAQA,EAAQ,GAAGgC,cAAc,UACxD/B,EAAiB5H,QAAQ2H,QAAQA,EAAQ,GAAGgC,cAAc,uBAC1DwB,EAAqBvD,EAAeiB,WAAW,mBAEnDiC,GAAY,SAASmB,GAClBrE,EAAesE,OAAOD,IAGzB,IAAIP,GAAW1L,QAAQ2H,QAAQC,EAAe,GAAG+B,cAAc,iBAE/DJ,GAAMzD,KAAOyD,EAAMoB,WAAa,OAAS,OACzCpB,EAAMoB,WAAapB,EAAMoB,YAAc,aACvCpB,EAAM4C,MAAQtB,EAEdtB,EAAM6C,QAAU,WACZ,OAAQvB,EAAQY,aAAeZ,EAAQwB,UAI3CxB,EAAQyB,YAAYC,QAAQ,SAASxJ,GACjC,GAAItD,GAAOO,QAAQ+D,OAAOhB,IAAUrD,OAAOqD,EACxCtD,IAAQA,EAAKG,UACZoL,EAAmBvL,EAAKqE,OAAOyF,EAAMoB,aAErCK,MAGRH,EAAQ2B,YAAY1I,OAAS,SAAS2I,EAAYC,GAC9C,MAAO7I,GAAgB6I,EAAWnD,EAAMoB,aAG5CE,EAAQ2B,YAAY7M,QAAU,SAAS8M,EAAYC,GAC/C,MAAO1I,GAAiB0I,EAAWnD,EAAMoB,WAAYpB,EAAM5J,UAG/DkL,EAAQ2B,YAAY3M,QAAU,SAAS4M,EAAYC,GAC/C,MAAOzI,GAAiByI,EAAWnD,EAAMoB,WAAYpB,EAAM1J,UAG/DgL,EAAQ2B,YAAYrI,OAAS,SAASsI,EAAYC,GAC9C,MAAOxI,GAAgBwI,EAAWnD,EAAMoB,WAAYpB,EAAMxJ,aAG9D8K,EAAQ8B,SAASJ,QAAQ,SAASxJ,GAC9B,GAAI6J,GAASlN,OAAOqD,EAAOwG,EAAMoB,YAAY,EAC7C,IAAGiC,EAAOhN,UAAW,CACjB,GAAGI,QAAQ+D,OAAO8G,EAAQgC,aAAc,CACpC,GAAIC,GAAgBpN,OAAOmL,EAAQgC,YACnCC,GAAcpM,KAAKkM,EAAOlM,QAC1BoM,EAAcC,MAAMH,EAAOG,SAC3BD,EAAcrN,KAAKmN,EAAOnN,QAE1BmN,EAASE,EAEb,MAAOF,GAAOjL,SAEd,MAAO3B,SAAQ+D,OAAO8G,EAAQgC,aAAehC,EAAQgC,YAAc,OAgC3EtD,EAAMyD,WAAa,SAASC,GACxBhD,EAAeY,EAAQgC,aACtBlN,QAAS4J,EAAM5J,QACfE,QAAS0J,EAAM1J,QACfE,WAAYwJ,EAAMxJ,WAClBkJ,YAAagE,IACdnL,KAAKwJ,IAQTL,EAAaiC,GAAG,mBAAoBrB,GAEpCtC,EAAM4D,IAAI,WAAY,WAClBlC,EAAamC,IAAI,mBAAoBvB,WAQzDpF,EAAOa,UAAU,iBAAkB,iBAAkB,WAAY,SAAS2C,EAAgB7K,GACtF,OACIoI,SAAU,IACV0C,QAAS,UACTX,OACI5J,QAAW,OACXE,QAAW,OACXE,WAAc,iBACd4K,WAAc,cAElBrB,KAAM,SAASC,EAAO5B,EAAS6B,EAAOqB,EAASC,GAmB3C,QAASkC,GAAWC,GAChBhD,EAAeY,EAAQgC,aACtBlN,QAAS4J,EAAM5J,QACfE,QAAS0J,EAAM1J,QACfE,WAAYwJ,EAAMxJ,WAClBkJ,YAAagE,IACdnL,KAAK,SAASuC,GACVwG,EAAQW,cAAc9L,OAAO2E,GAAMP,OAAOyF,EAAMzF,SAChD+G,EAAQe,YA1BhBrC,EAAMoB,WAAapB,EAAMoB,YAAc,aAEvCE,EAAQ2B,YAAY1I,OAAS,SAAS2I,EAAYC,GAC9C,MAAO7I,GAAgB6I,EAAWnD,EAAMzF,SAG5C+G,EAAQ2B,YAAY7M,QAAU,SAAS8M,EAAYC,GAC/C,MAAO1I,GAAiB0I,EAAWnD,EAAMzF,OAAQyF,EAAM5J,UAG3DkL,EAAQ2B,YAAY3M,QAAU,SAAS4M,EAAYC,GAC/C,MAAOzI,GAAiByI,EAAWnD,EAAMzF,OAAQyF,EAAM1J,UAG3DgL,EAAQ2B,YAAYrI,OAAS,SAASsI,EAAYC,GAC9C,MAAOxI,GAAgBwI,EAAWnD,EAAMzF,OAAQyF,EAAMxJ,aAe1D4H,EAAQuF,GAAG,QAASF,GAEpBzD,EAAM4D,IAAI,WAAY,WAClBxF,EAAQyF,IAAI,QAASJ,UAuIrCvG,EAAOa,UAAU,YAAa,WAAY,WAAY,SAAS8B,EAAUhK,GACrE,OACIoI,SAAU,IACV6B,kBACIvD,KAAQ,KACRzB,KAAQ,IACRC,WAAc,MAElB+I,SAAS,EACTrE,SAAU,khBASVH,YAAa,SAAUxD,GACvByD,aAAc,QACdQ,KAAM,SAASC,EAAO5B,EAAS6B,EAAOC,GAClC,GACI6D,IADUtN,QAAQ2H,QAAQA,EAAQ,GAAGgC,cAAc,iBAClCJ,EAAMgE,QAAQC,YAE/BC,EAAU,SAAS3B,GACnB,GAAI4B,GAAkB5B,EAAM6B,cAAcC,iBAAiB,GACvDC,EAAM/B,EAAM6B,cAAcG,YAAc,GAAMhC,EAAMiC,MAAQL,EAAgBM,MAC5EC,EAAMnC,EAAMoC,MAAQR,EAAgBS,IAAQrC,EAAM6B,cAAcS,aAAe,EAE/E9H,EAAMvF,KAAKiF,MAAOjF,KAAKsN,MAAMR,EAAGI,IAAM,IAAMlN,KAAKuN,IACrDlP,GAAS,WACLqK,EAAKpD,aAAaC,EAAM,KACrBmD,EAAKnF,YAA2D,MAA5C,UAAW,SAASiK,QAAQzC,EAAMhG,OAAgBwH,GAAgBA,EAAetI,eAIhH2C,GAAQuF,GAAG,YAAa,WACrBvF,EAAQuF,GAAG,YAAaO,KAG3B9F,EAAQuF,GAAG,UAAW,SAASsB,GAC3B7G,EAAQyF,IAAI,YAAaK,KAG7B9F,EAAQuF,GAAG,QAASO,GACpBlE,EAAM4D,IAAI,WAAY,WAClBxF,EAAQyF,IAAI,QAASK,GACrB9F,EAAQyF,IAAI,YAAaK,UAMzChH,EAAOsB,SAAS,iBAAkB,WAC9B,GAAIC,GAAW,KACXC,EAAe,QAEnBzI,MAAK4I,iBAAmB,SAASC,GAC7BL,EAAWK,GAGf7I,KAAK8I,qBAAuB,SAASD,GACjCJ,EAAeI,GAGnB7I,KAAK+I,MAAQ,YAAa,SAASrJ,GAC/B,GAAIuP,GAAa,SAASpK,EAAM/E,GAI5B,MAHIU,SAAQ+D,OAAOM,KAAOA,EAAOoE,KAAKC,OACjC1I,QAAQ2I,SAASrJ,KAAUA,MAEzBJ,EAAU0J,MACbC,YAAc,SAAU,YAAa,OAAQ,aAAc,WAAYzE,GACvE0E,aAAc,aACdC,qBAAqB,EACrBC,SAAU,68CAoByEf,EAAe,KAAOA,EAAe,yFACjBD,EAAW,KAAOA,EAAW,yEAKpIiB,YAAa3J,EAAQ2J,YACrBC,QACI7E,KAAMA,EACNC,WAAYhF,EAAQgF,YAExB6E,UAAU,IAIlB,OAAOsF,OAIfhI,EAAOa,UAAU,iBAAkB,iBAAkB,WAAY,SAASoH,EAAgBtP,GACtF,OACIoI,SAAU,IACV0C,QAAS,UACTC,YAAY,EACZnB,SAAU,SAASrB,EAAS6B,GACxB,GAAIY,GAAUpK,QAAQqK,UAAUb,EAAMc,YAClCC,EAAcvK,QAAQqK,UAAUb,EAAMgB,gBAAkBhB,EAAMgB,eAAiB,GAC/EC,IAAczK,QAAQqK,UAAUb,EAAMkB,eAE1C,OAAO,2LAI0BN,EAAU,eAAiB,IAAM,mEACVG,EAAc,kBAAoBA,EAAc,KAAOE,EAAc,kCAAoC,IAAM,kCAI3KlB,OACIoF,WAAc,aACdpE,YAAe,kBACfjG,WAAc,mBAElBgF,KAAM,SAASC,EAAO5B,EAAS6B,EAAOqB,EAASC,GA+C3C,QAASE,GAAmBjI,GACrB8H,EAAQ+D,SACP3D,EAAa,GAAGC,KAAOnI,EAAMH,OAAS,GAC1CqI,EAAa,GAAGlI,MAAQA,EACxBoI,EAAmBC,aAAaP,EAAQQ,SAAStI,IAGrD,QAAS8L,GAAWxK,GAChB,GAAItB,GAAQrD,OAAO2E,EAAMrE,QAAQ+D,OAAOM,GAAQ,KAAOkF,EAAMoF,YAAY,GACrEpD,EAAWxI,EAAMe,OAAOyF,EAAMoF,WAE/B5L,GAAMnD,WACLoL,EAAmBO,GACnBV,EAAQW,cAAcD,KAEtBP,EAAmB3G,GACnBwG,EAAQW,cAAcnH,KAGtBwG,EAAQY,WACRC,EAASC,SAAS,iBAClB/D,EAAe+D,SAAS,qBAAqBD,EAAS1B,YAAY,gBAEtEa,EAAQe,UAYZ,QAASC,GAAqBC,GACvBA,EAAMC,OAAOhJ,QAAU8H,EAAQmB,WAC9B6C,EAAW/C,EAAMC,OAAOhJ,OAnFhC,GAAIkI,GAAejL,QAAQ2H,QAAQA,EAAQ,GAAGgC,cAAc,UACxD/B,EAAiB5H,QAAQ2H,QAAQA,EAAQ,GAAGgC,cAAc,uBAC1DwB,EAAqBvD,EAAeiB,WAAW,mBAEnDiC,GAAY,SAASmB,GAClBrE,EAAesE,OAAOD,IAGzB,IAAIP,GAAW1L,QAAQ2H,QAAQC,EAAe,GAAG+B,cAAc,iBAE/DJ,GAAMzD,KAAOyD,EAAMoF,WAAa,OAAS,OACzCpF,EAAMoF,WAAapF,EAAMoF,YAAc,QACvCpF,EAAMjF,WAAaiF,EAAMjF,aAAc,EAEvCiF,EAAM9F,OAAO,WAAa,MAAOoH,GAAQiE,QAAU,SAASnL,EAAUC,GAClEuH,EAAmB4D,YAAYlE,EAAQY,aAAeuD,OAAOC,KAAKpE,EAAQiE,QAAQlM,UACnF,GAGHiI,EAAQyB,YAAYC,QAAQ,SAASxJ,GACjC,GAAIsB,GAAOrE,QAAQ+D,OAAOhB,IAAUrD,OAAOqD,EACxCsB,IAAQA,EAAKzE,WACZoL,EAAmB3G,EAAKP,OAAOyF,EAAMoF,eAG7C9D,EAAQ2B,YAAY1I,OAAS,SAAS2I,EAAYC,GAC9C,OAAQA,GAAa1M,QAAQ+D,OAAO2I,IAAchN,OAAOgN,EAAWnD,EAAMoF,YAAY,GAAM/O,WAGhGiL,EAAQ8B,SAASJ,QAAQ,SAASxJ,GAC9B,GAAI6J,GAASlN,OAAOqD,EAAOwG,EAAMoF,YAAY,EAC7C,IAAG/B,EAAOhN,UAAW,CACjB,GAAGI,QAAQ+D,OAAO8G,EAAQgC,aAAc,CACpC,GAAIC,GAAgBpN,OAAOmL,EAAQgC,YACnCC,GAAc/H,QAAQ6H,EAAO7H,WAC7B+H,EAAc5H,MAAM0H,EAAO1H,SAC3B4H,EAAcoC,QAAQtC,EAAOsC,WAE7BtC,EAASE,EAEb,MAAOF,GAAOjL,SAEd,MAAO3B,SAAQ+D,OAAO8G,EAAQgC,aAAehC,EAAQgC,YAAc,OA8B3EtD,EAAMyD,WAAa,SAASC,GACxByB,EAAe7D,EAAQgC,aACnB5D,YAAagE,EACb3I,WAAYiF,EAAMjF,aACnBxC,KAAK,SAASuC,GACbwK,EAAWxK,GAAM,MASzB4G,EAAaiC,GAAG,mBAAoBrB,GAEpCtC,EAAM4D,IAAI,WAAY,WAClBlC,EAAamC,IAAI,mBAAoBvB,UAMrDpF,EAAOa,UAAU,iBAAkB,iBAAkB,WAAY,SAASoH,EAAgBtP,GACtF,OACIoI,SAAU,IACV0C,QAAS,UACTX,OACIoF,WAAc,aACdrK,WAAc,mBAElBgF,KAAM,SAASC,EAAO5B,EAAS6B,EAAOqB,EAASC,GAE3C,QAASkC,GAAWC,GAChByB,EAAe7D,EAAQgC,aACnB5D,YAAagE,EACb3I,WAAYiF,EAAMjF,aACnBxC,KAAK,SAASuC,GACbwG,EAAQW,cAAc9L,OAAO2E,GAAMP,OAAOyF,EAAMzF,SAChD+G,EAAQe,YAPhBrC,EAAMzF,OAASyF,EAAMzF,QAAU,QAW/B6D,EAAQuF,GAAG,QAASF,GAEpBzD,EAAM4D,IAAI,WAAY,WAClBxF,EAAQyF,IAAI,QAASJ","file":"mdPickers.min.js","sourcesContent":["(function() {\n\"use strict\";\n/* global moment, angular */\r\n\r\nvar module = angular.module(\"mdPickers\", [\r\n\t\"ngMaterial\",\r\n\t\"ngAnimate\",\r\n\t\"ngAria\"\r\n]);\r\n\r\nmodule.config([\"$mdIconProvider\", \"mdpIconsRegistry\", function($mdIconProvider, mdpIconsRegistry) {\r\n\tangular.forEach(mdpIconsRegistry, function(icon, index) {\r\n\t\t$mdIconProvider.icon(icon.id, icon.url);\r\n\t});\r\n}]);\r\n\r\nmodule.run([\"$templateCache\", \"mdpIconsRegistry\", function($templateCache, mdpIconsRegistry) {\r\n\tangular.forEach(mdpIconsRegistry, function(icon, index) {\r\n\t\t$templateCache.put(icon.url, icon.svg);\r\n\t});\r\n}]);\nmodule.constant(\"mdpIconsRegistry\", [\r\n    {\r\n        id: 'mdp-chevron-left',\r\n        url: 'mdp-chevron-left.svg',\r\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\r\n    },\r\n    {\r\n        id: 'mdp-chevron-right',\r\n        url: 'mdp-chevron-right.svg',\r\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\r\n    },\r\n    {\r\n        id: 'mdp-access-time',\r\n        url: 'mdp-access-time.svg',\r\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\"/></svg>'\r\n    },\r\n    {\r\n        id: 'mdp-event',\r\n        url: 'mdp-event.svg',\r\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\r\n    }\r\n]);\nmodule.directive(\"ngMessage\", [\"$mdUtil\", function($mdUtil) {\r\n   return {\r\n        restrict: \"EA\",\r\n        priority: 101,\r\n        compile: function(element) {\r\n            var inputContainer = $mdUtil.getClosest(element, \"mdp-time-picker\", true) ||\r\n                                 $mdUtil.getClosest(element, \"mdp-date-picker\", true);\r\n            \r\n            // If we are not a child of an input container, don't do anything\r\n            if (!inputContainer) return;\r\n            \r\n            // Add our animation class\r\n            element.toggleClass('md-input-message-animation', true);\r\n            \r\n            return {};\r\n        }\r\n    } \r\n}]);\n/* global moment, angular */\n\nfunction DatePickerCtrl($scope, $mdDialog, $mdMedia, $timeout, currentDate, options) {\n    var self = this;\n\n    this.date = moment(currentDate);\n    this.minDate = options.minDate && moment(options.minDate).isValid() ? moment(options.minDate) : null;\n    this.maxDate = options.maxDate && moment(options.maxDate).isValid() ? moment(options.maxDate) : null;\n    this.displayFormat = options.displayFormat || \"ddd, MMM DD\";\n    this.dateFilter = angular.isFunction(options.dateFilter) ? options.dateFilter : null;\n    this.selectingYear = false;\n    \n    // validate min and max date\n\tif (this.minDate && this.maxDate) {\n\t\tif (this.maxDate.isBefore(this.minDate)) {\n\t\t\tthis.maxDate = moment(this.minDate).add(1, 'days');\n\t\t}\n\t}\n\t\n\tif (this.date) {\n\t\t// check min date\n    \tif (this.minDate && this.date.isBefore(this.minDate)) {\n\t\t\tthis.date = moment(this.minDate);\n    \t}\n    \t\n    \t// check max date\n    \tif (this.maxDate && this.date.isAfter(this.maxDate)) {\n\t\t\tthis.date = moment(this.maxDate);\n    \t}\n\t}\n\t\n\tthis.yearItems = {\n        currentIndex_: 0,\n        PAGE_SIZE: 5,\n        START: (self.minDate ? self.minDate.year() : 1900),\n        END: (self.maxDate ? self.maxDate.year() : 0),\n        getItemAtIndex: function(index) {\n        \tif(this.currentIndex_ < index)\n                this.currentIndex_ = index;\n        \t\n        \treturn this.START + index;\n        },\n        getLength: function() {\n            return Math.min(\n                this.currentIndex_ + Math.floor(this.PAGE_SIZE / 2),\n                Math.abs(this.START - this.END) + 1\n            );\n        }\n    };\n\n    $scope.$mdMedia = $mdMedia;\n    $scope.year = this.date.year();\n\n\tthis.selectYear = function(year) {\n        self.date.year(year);\n        $scope.year = year;\n        self.selectingYear = false;\n        self.animate();\n    };\n    \n    this.showYear = function() { \n        self.yearTopIndex = (self.date.year() - self.yearItems.START) + Math.floor(self.yearItems.PAGE_SIZE / 2);\n        self.yearItems.currentIndex_ = (self.date.year() - self.yearItems.START) + 1;\n        self.selectingYear = true;\n    };\n    \n    this.showCalendar = function() {\n        self.selectingYear = false;\n    };\n\n    this.cancel = function() {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function() {\n    \tvar date = this.date;\n    \t\n    \tif (this.minDate && this.date.isBefore(this.minDate)) {\n    \t\tdate = moment(this.minDate);\n    \t}\n    \t\n    \tif (this.maxDate && this.date.isAfter(this.maxDate)) {\n    \t\tdate = moment(this.maxDate);\n    \t}  \t\n    \t\n        $mdDialog.hide(date.toDate());\n    };\n    \n    this.animate = function() {\n        self.animating = true;\n        $timeout(angular.noop).then(function() {\n            self.animating = false;\n        })  \n    };\n}\n\nmodule.provider(\"$mdpDatePicker\", function() {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\",\n        DISPLAY_FORMAT = \"ddd, MMM DD\";\n        \n    this.setDisplayFormat = function(format) {\n        DISPLAY_FORMAT = format;    \n    };\n        \n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n    \n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n    \n    this.$get = [\"$mdDialog\", function($mdDialog) {\n        var datePicker = function(currentDate, options) {\n            if (!angular.isDate(currentDate)) currentDate = Date.now();\n            if (!angular.isObject(options)) options = {};\n            \n            options.displayFormat = DISPLAY_FORMAT;\n    \n            return $mdDialog.show({\n                controller:  ['$scope', '$mdDialog', '$mdMedia', '$timeout', 'currentDate', 'options', DatePickerCtrl],\n                controllerAs: 'datepicker',\n                clickOutsideToClose: true,\n                template: '<md-dialog aria-label=\"\" class=\"mdp-datepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n                            '<md-dialog-content layout=\"row\" layout-wrap>' +\n                                '<div layout=\"column\" layout-align=\"start center\">' +\n                                    '<md-toolbar layout-align=\"start start\" flex class=\"mdp-datepicker-date-wrapper md-hue-1 md-primary\" layout=\"column\">' +\n                                        '<span class=\"mdp-datepicker-year\" ng-click=\"datepicker.showYear()\" ng-class=\"{ \\'active\\': datepicker.selectingYear }\">{{ datepicker.date.format(\\'YYYY\\') }}</span>' +\n                                        '<span class=\"mdp-datepicker-date\" ng-click=\"datepicker.showCalendar()\" ng-class=\"{ \\'active\\': !datepicker.selectingYear }\">{{ datepicker.date.format(datepicker.displayFormat) }}</span> ' +\n                                    '</md-toolbar>' + \n                                '</div>' +  \n                                '<div>' + \n                                    '<div class=\"mdp-datepicker-select-year mdp-animation-zoom\" layout=\"column\" layout-align=\"center start\" ng-if=\"datepicker.selectingYear\">' +\n                                        '<md-virtual-repeat-container md-auto-shrink md-top-index=\"datepicker.yearTopIndex\">' +\n                                            '<div flex md-virtual-repeat=\"item in datepicker.yearItems\" md-on-demand class=\"repeated-year\">' +\n                                                '<span class=\"md-button\" ng-click=\"datepicker.selectYear(item)\" md-ink-ripple ng-class=\"{ \\'md-primary current\\': item == year }\">{{ item }}</span>' +\n                                            '</div>' +\n                                        '</md-virtual-repeat-container>' +\n                                    '</div>' +\n                                    '<mdp-calendar ng-if=\"!datepicker.selectingYear\" class=\"mdp-animation-zoom\" date=\"datepicker.date\" min-date=\"datepicker.minDate\" date-filter=\"datepicker.dateFilter\" max-date=\"datepicker.maxDate\"></mdp-calendar>' +\n                                    '<md-dialog-actions layout=\"row\">' +\n                                    \t'<span flex></span>' +\n                                        '<md-button ng-click=\"datepicker.cancel()\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\n                                        '<md-button ng-click=\"datepicker.confirm()\" class=\"md-primary\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\n                                    '</md-dialog-actions>' +\n                                '</div>' +\n                            '</md-dialog-content>' +\n                        '</md-dialog>',\n                targetEvent: options.targetEvent,\n                locals: {\n                    currentDate: currentDate,\n                    options: options\n                },\n                skipHide: true\n            });\n        };\n    \n        return datePicker;\n    }];\n});\n\nfunction CalendarCtrl($scope) {\n\tvar self = this;\n\tthis.dow = moment.localeData().firstDayOfWeek();\n\t\n    this.weekDays = [].concat(\n        moment.weekdaysMin().slice(\n            this.dow\n        ),\n        moment.weekdaysMin().slice(\n            0, \n            this.dow\n        )\n    );\n    \n    this.daysInMonth = [];\n    \n    this.getDaysInMonth = function() {\n        var days = self.date.daysInMonth(),\n            firstDay = moment(self.date).date(1).day() - this.dow;\n            \n        if(firstDay < 0) firstDay = this.weekDays.length - 1;\n            \n\n        var arr = [];\n        for(var i = 1; i <= (firstDay + days); i++) {\n            var day = null;\n            if(i > firstDay) {\n                day =  {\n                    value: (i - firstDay),\n                    enabled: self.isDayEnabled(moment(self.date).date(i - firstDay).toDate())\n                };\n            }\n            arr.push(day);\n        }\n \n        return arr;\n    };\n    \n    this.isDayEnabled = function(day) {\n        return (!this.minDate || this.minDate <= day) && \n            (!this.maxDate || this.maxDate >= day) && \n            (!self.dateFilter || !self.dateFilter(day));\n    };\n    \n    this.selectDate = function(dom) {\n        self.date.date(dom);\n    };\n\n    this.nextMonth = function() {\n        self.date.add(1, 'months');\n    };\n\n    this.prevMonth = function() {\n        self.date.subtract(1, 'months');\n    };\n    \n    this.updateDaysInMonth = function() {\n        self.daysInMonth = self.getDaysInMonth();\n    };\n    \n    $scope.$watch(function() { return  self.date.unix() }, function(newValue, oldValue) {\n        if(newValue && newValue !== oldValue)\n            self.updateDaysInMonth();\n    })\n    \n    self.updateDaysInMonth();\n}\n\nmodule.directive(\"mdpCalendar\", [\"$animate\", function($animate) {\n    return {\n        restrict: 'E',\n        bindToController: {\n            \"date\": \"=\",\n            \"minDate\": \"=\",\n            \"maxDate\": \"=\",\n            \"dateFilter\": \"=\"\n        },\n        template: '<div class=\"mdp-calendar\">' +\n                    '<div layout=\"row\" layout-align=\"space-between center\">' +\n                        '<md-button aria-label=\"previous month\" class=\"md-icon-button\" ng-click=\"calendar.prevMonth()\"><md-icon md-svg-icon=\"mdp-chevron-left\"></md-icon></md-button>' +\n                        '<div class=\"mdp-calendar-monthyear\" ng-show=\"!calendar.animating\">{{ calendar.date.format(\"MMMM YYYY\") }}</div>' +\n                        '<md-button aria-label=\"next month\" class=\"md-icon-button\" ng-click=\"calendar.nextMonth()\"><md-icon md-svg-icon=\"mdp-chevron-right\"></md-icon></md-button>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"space-around center\" class=\"mdp-calendar-week-days\" ng-show=\"!calendar.animating\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat=\"d in calendar.weekDays track by $index\">{{ d }}</div>' +\n                    '</div>' +\n                    '<div layout=\"row\" layout-align=\"start center\" layout-wrap class=\"mdp-calendar-days\" ng-class=\"{ \\'mdp-animate-next\\': calendar.animating }\" ng-show=\"!calendar.animating\" md-swipe-left=\"calendar.nextMonth()\" md-swipe-right=\"calendar.prevMonth()\">' +\n                        '<div layout layout-align=\"center center\" ng-repeat-start=\"day in calendar.daysInMonth track by $index\" ng-class=\"{ \\'mdp-day-placeholder\\': !day }\">' +\n                            '<md-button class=\"md-icon-button md-raised\" aria-label=\"Select day\" ng-if=\"day\" ng-class=\"{ \\'md-accent\\': calendar.date.date() == day.value }\" ng-click=\"calendar.selectDate(day.value)\" ng-disabled=\"!day.enabled\">{{ day.value }}</md-button>' +\n                        '</div>' +\n                        '<div flex=\"100\" ng-if=\"($index + 1) % 7 == 0\" ng-repeat-end></div>' +\n                    '</div>' +\n                '</div>',\n        controller: [\"$scope\", CalendarCtrl],\n        controllerAs: \"calendar\",\n        link: function(scope, element, attrs, ctrl) {\n            var animElements = [\n                element[0].querySelector(\".mdp-calendar-week-days\"),\n                element[0].querySelector('.mdp-calendar-days'),\n                element[0].querySelector('.mdp-calendar-monthyear')\n            ].map(function(a) {\n               return angular.element(a); \n            });\n                \n            scope.$watch(function() { return  ctrl.date.format(\"YYYYMM\") }, function(newValue, oldValue) {\n                var direction = null;\n                \n                if(newValue > oldValue)\n                    direction = \"mdp-animate-next\";\n                else if(newValue < oldValue)\n                    direction = \"mdp-animate-prev\";\n                \n                if(direction) {\n                    for(var i in animElements) {\n                        animElements[i].addClass(direction);\n                        $animate.removeClass(animElements[i], direction);\n                    }\n                }\n            });\n        }\n    }\n}]);\n\nfunction formatValidator(value, format) {\n    return !value || angular.isDate(value) || moment(value, format, true).isValid();\n}\n\nfunction minDateValidator(value, format, minDate) {\n    var minDate = moment(minDate, \"YYYY-MM-DD\", true);\n    var date = angular.isDate(value) ? moment(value) :  moment(value, format, true);\n    \n    return !value || \n            angular.isDate(value) || \n            !minDate.isValid() || \n            date.isAfter(minDate);\n}\n\nfunction maxDateValidator(value, format, maxDate) {\n    var maxDate = moment(maxDate, \"YYYY-MM-DD\", true);\n    var date = angular.isDate(value) ? moment(value) :  moment(value, format, true);\n    \n    return !value || \n            angular.isDate(value) || \n            !maxDate.isValid() || \n            date.isBefore(maxDate);\n}\n\nfunction filterValidator(value, format, filter) {\n    var date = angular.isDate(value) ? moment(value) :  moment(value, format, true);\n                \n    return !value || \n            angular.isDate(value) || \n            !angular.isFunction(filter) || \n            filter(date);\n}\n\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", function($mdpDatePicker, $timeout) {\n    return  {\n        restrict: 'E',\n        require: 'ngModel',\n        transclude: true,\n        template: function(element, attrs) {\n            var noFloat = angular.isDefined(attrs.mdpNoFloat),\n                placeholder = angular.isDefined(attrs.mdpPlaceholder) ? attrs.mdpPlaceholder : \"\",\n                openOnClick = angular.isDefined(attrs.mdpOpenOnClick) ? true : false;\n            \n            return '<div layout layout-align=\"start start\">' +\n                    '<md-button class=\"md-icon-button\" ng-click=\"showPicker($event)\">' +\n                        '<md-icon md-svg-icon=\"mdp-event\"></md-icon>' +\n                    '</md-button>' +\n                    '<md-input-container' + (noFloat ? ' md-no-float' : '') + ' md-is-error=\"isError()\">' +\n                        '<input type=\"{{ ::type }}\" aria-label=\"' + placeholder + '\" placeholder=\"' + placeholder + '\"' + (openOnClick ? ' ng-click=\"showPicker($event)\" ' : '') + ' />' +\n                    '</md-input-container>' +\n                '</div>';\n        },\n        scope: {\n            \"minDate\": \"=mdpMinDate\",\n            \"maxDate\": \"=mdpMaxDate\",\n            \"dateFilter\": \"=mdpDateFilter\",\n            \"dateFormat\": \"@mdpFormat\",\n            \"placeholder\": \"@mdpPlaceholder\",\n            \"noFloat\": \"=mdpNoFloat\",\n            \"openOnClick\": \"=mdpOpenOnClick\"\n        },\n        link: {\n            pre: function(scope, element, attrs, ngModel, $transclude) {\n                \n            },\n            post: function(scope, element, attrs, ngModel, $transclude) {\n                var inputElement = angular.element(element[0].querySelector('input')),\n                    inputContainer = angular.element(element[0].querySelector('md-input-container')),\n                    inputContainerCtrl = inputContainer.controller(\"mdInputContainer\");\n                    \n                $transclude(function(clone) {\n                   inputContainer.append(clone); \n                });  \n                \n                var messages = angular.element(inputContainer[0].querySelector(\"[ng-messages]\"));\n                \n                scope.type = scope.dateFormat ? \"text\" : \"date\"\n                scope.dateFormat = scope.dateFormat || \"YYYY-MM-DD\";\n                scope.model = ngModel;\n                \n                scope.isError = function() {\n                    return !ngModel.$pristine && !!ngModel.$invalid;\n                };\n                \n                // update input element if model has changed\n                ngModel.$formatters.unshift(function(value) {\n                    var date = angular.isDate(value) && moment(value);\n                    if(date && date.isValid())\n                        updateInputElement(date.format(scope.dateFormat));\n                    else\n                        updateInputElement();\n                });\n                \n                ngModel.$validators.format = function(modelValue, viewValue) {\n                    return formatValidator(viewValue, scope.dateFormat);\n                };\n                \n                ngModel.$validators.minDate = function(modelValue, viewValue) {\n                    return minDateValidator(viewValue, scope.dateFormat, scope.minDate);\n                };\n                \n                ngModel.$validators.maxDate = function(modelValue, viewValue) {\n                    return maxDateValidator(viewValue, scope.dateFormat, scope.maxDate);\n                };\n                \n                ngModel.$validators.filter = function(modelValue, viewValue) {\n                    return filterValidator(viewValue, scope.dateFormat, scope.dateFilter);\n                };\n                \n                ngModel.$parsers.unshift(function(value) {\n                    var parsed = moment(value, scope.dateFormat, true);\n                    if(parsed.isValid()) {\n                        if(angular.isDate(ngModel.$modelValue)) {\n                            var originalModel = moment(ngModel.$modelValue);\n                            originalModel.year(parsed.year());\n                            originalModel.month(parsed.month());\n                            originalModel.date(parsed.date());\n                            \n                            parsed = originalModel;\n                        }\n                        return parsed.toDate(); \n                    } else\n                        return angular.isDate(ngModel.$modelValue) ? ngModel.$modelValue : null;\n                });\n\n                // update input element value\n                function updateInputElement(value) {\n                    if (value) {\n                        inputElement[0].size = value.length + 1;\n                        inputElement[0].value = value;\n                    } else\n                        inputElement[0].value = '';\n                    inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\n                }\n                \n                function updateDate(date) {\n                    var value = moment(date, angular.isDate(date) ? null : scope.dateFormat, true),\n                        strValue = value.format(scope.dateFormat);\n    \n                    if(value.isValid()) {\n                        updateInputElement(strValue);\n                        ngModel.$setViewValue(strValue);\n                    } else {\n                        updateInputElement(date);\n                        ngModel.$setViewValue(date);\n                    }\n                    \n                    if(!ngModel.$pristine && \n                        messages.hasClass(\"md-auto-hide\") && \n                        inputContainer.hasClass(\"md-input-invalid\")) messages.removeClass(\"md-auto-hide\");\n    \n                    ngModel.$render();\n                }\n                    \n                scope.showPicker = function(ev) {\n                    $mdpDatePicker(ngModel.$modelValue, {\n                \t    minDate: scope.minDate, \n                \t    maxDate: scope.maxDate,\n                \t    dateFilter: scope.dateFilter,\n                \t    targetEvent: ev\n            \t    }).then(updateDate);\n                };\n                \n                function onInputElementEvents(event) {\n                    if(event.target.value !== ngModel.$viewVaue)\n                        updateDate(event.target.value);\n                }\n                \n                inputElement.on(\"reset input blur\", onInputElementEvents);\n                \n                scope.$on(\"$destroy\", function() {\n                    inputElement.off(\"reset input blur\", onInputElementEvents);\n                })\n            }\n        }\n    };\n}]);\n\n\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", function($mdpDatePicker, $timeout) {\n    return  {\n        restrict: 'A',\n        require: 'ngModel',\n        scope: {\n            \"minDate\": \"@min\",\n            \"maxDate\": \"@max\",\n            \"dateFilter\": \"=mdpDateFilter\",\n            \"dateFormat\": \"@mdpFormat\",\n        },\n        link: function(scope, element, attrs, ngModel, $transclude) {\n            scope.dateFormat = scope.dateFormat || \"YYYY-MM-DD\";\n            \n            ngModel.$validators.format = function(modelValue, viewValue) {\n                return formatValidator(viewValue, scope.format);\n            };\n            \n            ngModel.$validators.minDate = function(modelValue, viewValue) {\n                return minDateValidator(viewValue, scope.format, scope.minDate);\n            };\n            \n            ngModel.$validators.maxDate = function(modelValue, viewValue) {\n                return maxDateValidator(viewValue, scope.format, scope.maxDate);\n            };\n            \n            ngModel.$validators.filter = function(modelValue, viewValue) {\n                return filterValidator(viewValue, scope.format, scope.dateFilter);\n            };\n            \n            function showPicker(ev) {\n                $mdpDatePicker(ngModel.$modelValue, {\n            \t    minDate: scope.minDate, \n            \t    maxDate: scope.maxDate,\n            \t    dateFilter: scope.dateFilter,\n            \t    targetEvent: ev\n        \t    }).then(function(time) {\n                    ngModel.$setViewValue(moment(time).format(scope.format));\n                    ngModel.$render();\n                });\n            };\n            \n            element.on(\"click\", showPicker);\n            \n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", showPicker);\n            });\n        }\n    }\n}]);\n/* global moment, angular */\r\n\r\nfunction TimePickerCtrl($scope, $mdDialog, time, autoSwitch, $mdMedia) {\r\n\tvar self = this;\r\n    this.VIEW_HOURS = 1;\r\n    this.VIEW_MINUTES = 2;\r\n    this.currentView = this.VIEW_HOURS;\r\n    this.time = moment(time);\r\n    this.autoSwitch = !!autoSwitch;\r\n    console.log(autoSwitch);\r\n    \r\n    this.clockHours = parseInt(this.time.format(\"h\"));\r\n    this.clockMinutes = parseInt(this.time.minutes());\r\n    \r\n\t$scope.$mdMedia = $mdMedia;\r\n\t\r\n\tthis.switchView = function() {\r\n\t    self.currentView = self.currentView == self.VIEW_HOURS ? self.VIEW_MINUTES : self.VIEW_HOURS;\r\n\t};\r\n    \r\n\tthis.setAM = function() {\r\n        if(self.time.hours() >= 12)\r\n            self.time.hour(self.time.hour() - 12);\r\n\t};\r\n    \r\n    this.setPM = function() {\r\n        if(self.time.hours() < 12)\r\n            self.time.hour(self.time.hour() + 12);\r\n\t};\r\n    \r\n    this.cancel = function() {\r\n        $mdDialog.cancel();\r\n    };\r\n\r\n    this.confirm = function() {\r\n        $mdDialog.hide(this.time.toDate());\r\n    };\r\n}\r\n\r\nfunction ClockCtrl($scope) {\r\n    var TYPE_HOURS = \"hours\";\r\n    var TYPE_MINUTES = \"minutes\";\r\n    var self = this;\r\n    \r\n    this.STEP_DEG = 360 / 12;\r\n    this.steps = [];\r\n    \r\n    this.CLOCK_TYPES = {\r\n        \"hours\": {\r\n            range: 12,\r\n        },\r\n        \"minutes\": {\r\n            range: 60,\r\n        }\r\n    }\r\n    \r\n    this.getPointerStyle = function() {\r\n        var divider = 1;\r\n        switch(self.type) {\r\n            case TYPE_HOURS:\r\n                divider = 12;\r\n                break;\r\n            case TYPE_MINUTES:\r\n                divider = 60;\r\n                break;\r\n        }  \r\n        var degrees = Math.round(self.selected * (360 / divider)) - 180;\r\n        return { \r\n            \"-webkit-transform\": \"rotate(\" + degrees + \"deg)\",\r\n            \"-ms-transform\": \"rotate(\" + degrees + \"deg)\",\r\n            \"transform\": \"rotate(\" + degrees + \"deg)\"\r\n        }\r\n    };\r\n    \r\n    this.setTimeByDeg = function(deg) {\r\n        deg = deg >= 360 ? 0 : deg;\r\n        var divider = 0;\r\n        switch(self.type) {\r\n            case TYPE_HOURS:\r\n                divider = 12;\r\n                break;\r\n            case TYPE_MINUTES:\r\n                divider = 60;\r\n                break;\r\n        }  \r\n        \r\n        self.setTime(\r\n            Math.round(divider / 360 * deg)\r\n        );\r\n    };\r\n    \r\n    this.setTime = function(time, type) {\r\n        this.selected = time;\r\n        \r\n        switch(self.type) {\r\n            case TYPE_HOURS:\r\n                if(self.time.format(\"A\") == \"PM\") time += 12;\r\n                this.time.hours(time);\r\n                break;\r\n            case TYPE_MINUTES:\r\n                if(time > 59) time -= 60;\r\n                this.time.minutes(time);\r\n                break;\r\n        }\r\n        \r\n    };\r\n    \r\n    this.init = function() {\r\n        self.type = self.type || \"hours\";\r\n        switch(self.type) {\r\n            case TYPE_HOURS:\r\n                for(var i = 1; i <= 12; i++)\r\n                    self.steps.push(i);\r\n                self.selected = self.time.hours() || 0;\r\n                if(self.selected > 12) self.selected -= 12;\r\n                    \r\n                break;\r\n            case TYPE_MINUTES:\r\n                for(var i = 5; i <= 55; i+=5)\r\n                    self.steps.push(i);\r\n                self.steps.push(0);\r\n                self.selected = self.time.minutes() || 0;\r\n                \r\n                break;\r\n        }\r\n    };\r\n    \r\n    this.init();\r\n}\r\n\r\nmodule.directive(\"mdpClock\", [\"$animate\", \"$timeout\", function($animate, $timeout) {\r\n    return {\r\n        restrict: 'E',\r\n        bindToController: {\r\n            'type': '@?',\r\n            'time': '=',\r\n            'autoSwitch': '=?'\r\n        },\r\n        replace: true,\r\n        template: '<div class=\"mdp-clock\">' +\r\n                        '<div class=\"mdp-clock-container\">' +\r\n                            '<md-toolbar class=\"mdp-clock-center md-primary\"></md-toolbar>' +\r\n                            '<md-toolbar ng-style=\"clock.getPointerStyle()\" class=\"mdp-pointer md-primary\">' +\r\n                                '<span class=\"mdp-clock-selected md-button md-raised md-primary\"></span>' +\r\n                            '</md-toolbar>' +\r\n                            '<md-button ng-class=\"{ \\'md-primary\\': clock.selected == step }\" class=\"md-icon-button md-raised mdp-clock-deg{{ ::(clock.STEP_DEG * ($index + 1)) }}\" ng-repeat=\"step in clock.steps\" ng-click=\"clock.setTime(step)\">{{ step }}</md-button>' +\r\n                        '</div>' +\r\n                    '</div>',\r\n        controller: [\"$scope\", ClockCtrl],\r\n        controllerAs: \"clock\",\r\n        link: function(scope, element, attrs, ctrl) {\r\n            var pointer = angular.element(element[0].querySelector(\".mdp-pointer\")),\r\n                timepickerCtrl = scope.$parent.timepicker;\r\n            \r\n            var onEvent = function(event) {\r\n                var containerCoords = event.currentTarget.getClientRects()[0];\r\n                var x = ((event.currentTarget.offsetWidth / 2) - (event.pageX - containerCoords.left)),\r\n                    y = ((event.pageY - containerCoords.top) - (event.currentTarget.offsetHeight / 2));\r\n\r\n                var deg = Math.round((Math.atan2(x, y) * (180 / Math.PI)));\r\n                $timeout(function() {\r\n                    ctrl.setTimeByDeg(deg + 180);\r\n                    if(ctrl.autoSwitch && [\"mouseup\", \"click\"].indexOf(event.type) !== -1 && timepickerCtrl) timepickerCtrl.switchView();\r\n                });\r\n            }; \r\n            \r\n            element.on(\"mousedown\", function() {\r\n               element.on(\"mousemove\", onEvent);\r\n            });\r\n            \r\n            element.on(\"mouseup\", function(e) {\r\n                element.off(\"mousemove\", onEvent);\r\n            });\r\n            \r\n            element.on(\"click\", onEvent);\r\n            scope.$on(\"$destroy\", function() {\r\n                element.off(\"click\", onEvent);\r\n                element.off(\"mousemove\", onEvent); \r\n            });\r\n        }\r\n    }\r\n}]);\r\n\r\nmodule.provider(\"$mdpTimePicker\", function() {\r\n    var LABEL_OK = \"OK\",\r\n        LABEL_CANCEL = \"Cancel\";\r\n        \r\n    this.setOKButtonLabel = function(label) {\r\n        LABEL_OK = label;\r\n    };\r\n    \r\n    this.setCancelButtonLabel = function(label) {\r\n        LABEL_CANCEL = label;\r\n    };\r\n    \r\n    this.$get = [\"$mdDialog\", function($mdDialog) {\r\n        var timePicker = function(time, options) {\r\n            if(!angular.isDate(time)) time = Date.now();\r\n            if (!angular.isObject(options)) options = {};\r\n    \r\n            return $mdDialog.show({\r\n                controller:  ['$scope', '$mdDialog', 'time', 'autoSwitch', '$mdMedia', TimePickerCtrl],\r\n                controllerAs: 'timepicker',\r\n                clickOutsideToClose: true,\r\n                template: '<md-dialog aria-label=\"\" class=\"mdp-timepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\r\n                            '<md-dialog-content layout-gt-xs=\"row\" layout-wrap>' +\r\n                                '<md-toolbar layout-gt-xs=\"column\" layout-xs=\"row\" layout-align=\"center center\" flex class=\"mdp-timepicker-time md-hue-1 md-primary\">' +\r\n                                    '<div class=\"mdp-timepicker-selected-time\">' +\r\n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_HOURS }\" ng-click=\"timepicker.currentView = timepicker.VIEW_HOURS\">{{ timepicker.time.format(\"h\") }}</span>:' + \r\n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_MINUTES }\" ng-click=\"timepicker.currentView = timepicker.VIEW_MINUTES\">{{ timepicker.time.format(\"mm\") }}</span>' +\r\n                                    '</div>' +\r\n                                    '<div layout=\"column\" class=\"mdp-timepicker-selected-ampm\">' + \r\n                                        '<span ng-click=\"timepicker.setAM()\" ng-class=\"{ \\'active\\': timepicker.time.hours() < 12 }\">AM</span>' +\r\n                                        '<span ng-click=\"timepicker.setPM()\" ng-class=\"{ \\'active\\': timepicker.time.hours() >= 12 }\">PM</span>' +\r\n                                    '</div>' + \r\n                                '</md-toolbar>' +\r\n                                '<div>' +\r\n                                    '<div class=\"mdp-clock-switch-container\" ng-switch=\"timepicker.currentView\" layout layout-align=\"center center\">' +\r\n\t                                    '<mdp-clock class=\"mdp-animation-zoom\" auto-switch=\"timepicker.autoSwitch\" time=\"timepicker.time\" type=\"hours\" ng-switch-when=\"1\"></mdp-clock>' +\r\n\t                                    '<mdp-clock class=\"mdp-animation-zoom\" auto-switch=\"timepicker.autoSwitch\" time=\"timepicker.time\" type=\"minutes\" ng-switch-when=\"2\"></mdp-clock>' +\r\n                                    '</div>' +\r\n                                    \r\n                                    '<md-dialog-actions layout=\"row\">' +\r\n\t                                \t'<span flex></span>' +\r\n                                        '<md-button ng-click=\"timepicker.cancel()\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\r\n                                        '<md-button ng-click=\"timepicker.confirm()\" class=\"md-primary\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\r\n                                    '</md-dialog-actions>' +\r\n                                '</div>' +\r\n                            '</md-dialog-content>' +\r\n                        '</md-dialog>',\r\n                targetEvent: options.targetEvent,\r\n                locals: {\r\n                    time: time,\r\n                    autoSwitch: options.autoSwitch\r\n                },\r\n                skipHide: true\r\n            });\r\n        };\r\n    \r\n        return timePicker;\r\n    }];\r\n});\r\n\r\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", function($mdpTimePicker, $timeout) {\r\n    return  {\r\n        restrict: 'E',\r\n        require: 'ngModel',\r\n        transclude: true,\r\n        template: function(element, attrs) {\r\n            var noFloat = angular.isDefined(attrs.mdpNoFloat),\r\n                placeholder = angular.isDefined(attrs.mdpPlaceholder) ? attrs.mdpPlaceholder : \"\",\r\n                openOnClick = angular.isDefined(attrs.mdpOpenOnClick) ? true : false;\r\n            \r\n            return '<div layout layout-align=\"start start\">' +\r\n                    '<md-button class=\"md-icon-button\" ng-click=\"showPicker($event)\">' +\r\n                        '<md-icon md-svg-icon=\"mdp-access-time\"></md-icon>' +\r\n                    '</md-button>' +\r\n                    '<md-input-container' + (noFloat ? ' md-no-float' : '') + ' md-is-error=\"isError()\">' +\r\n                        '<input type=\"{{ ::type }}\" aria-label=\"' + placeholder + '\" placeholder=\"' + placeholder + '\"' + (openOnClick ? ' ng-click=\"showPicker($event)\" ' : '') + ' />' +\r\n                    '</md-input-container>' +\r\n                '</div>';\r\n        },\r\n        scope: {\r\n            \"timeFormat\": \"@mdpFormat\",\r\n            \"placeholder\": \"@mdpPlaceholder\",\r\n            \"autoSwitch\": \"=?mdpAutoSwitch\",\r\n        },\r\n        link: function(scope, element, attrs, ngModel, $transclude) {\r\n            var inputElement = angular.element(element[0].querySelector('input')),\r\n                inputContainer = angular.element(element[0].querySelector('md-input-container')),\r\n                inputContainerCtrl = inputContainer.controller(\"mdInputContainer\");\r\n                \r\n            $transclude(function(clone) {\r\n               inputContainer.append(clone); \r\n            });\r\n            \r\n            var messages = angular.element(inputContainer[0].querySelector(\"[ng-messages]\"));\r\n            \r\n            scope.type = scope.timeFormat ? \"text\" : \"time\"\r\n            scope.timeFormat = scope.timeFormat || \"HH:mm\";\r\n            scope.autoSwitch = scope.autoSwitch || false;\r\n            \r\n            scope.$watch(function() { return ngModel.$error }, function(newValue, oldValue) {\r\n                inputContainerCtrl.setInvalid(!ngModel.$pristine && !!Object.keys(ngModel.$error).length);\r\n            }, true);\r\n            \r\n            // update input element if model has changed\r\n            ngModel.$formatters.unshift(function(value) {\r\n                var time = angular.isDate(value) && moment(value);\r\n                if(time && time.isValid()) \r\n                    updateInputElement(time.format(scope.timeFormat));\r\n            });\r\n            \r\n            ngModel.$validators.format = function(modelValue, viewValue) {\r\n                return !viewValue || angular.isDate(viewValue) || moment(viewValue, scope.timeFormat, true).isValid();\r\n            };\r\n            \r\n            ngModel.$parsers.unshift(function(value) {\r\n                var parsed = moment(value, scope.timeFormat, true);\r\n                if(parsed.isValid()) {\r\n                    if(angular.isDate(ngModel.$modelValue)) {\r\n                        var originalModel = moment(ngModel.$modelValue);\r\n                        originalModel.minutes(parsed.minutes());\r\n                        originalModel.hours(parsed.hours());\r\n                        originalModel.seconds(parsed.seconds());\r\n                        \r\n                        parsed = originalModel;\r\n                    }\r\n                    return parsed.toDate(); \r\n                } else\r\n                    return angular.isDate(ngModel.$modelValue) ? ngModel.$modelValue : null;\r\n            });\r\n            \r\n            // update input element value\r\n            function updateInputElement(value) {\r\n                if(ngModel.$valid)\r\n                    inputElement[0].size = value.length + 1;\r\n                inputElement[0].value = value;\r\n                inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\r\n            }\r\n            \r\n            function updateTime(time) {\r\n                var value = moment(time, angular.isDate(time) ? null : scope.timeFormat, true),\r\n                    strValue = value.format(scope.timeFormat);\r\n\r\n                if(value.isValid()) {\r\n                    updateInputElement(strValue);\r\n                    ngModel.$setViewValue(strValue);\r\n                } else {\r\n                    updateInputElement(time);\r\n                    ngModel.$setViewValue(time);\r\n                }\r\n                \r\n                if(!ngModel.$pristine && \r\n                    messages.hasClass(\"md-auto-hide\") && \r\n                    inputContainer.hasClass(\"md-input-invalid\")) messages.removeClass(\"md-auto-hide\");\r\n                \r\n                ngModel.$render();\r\n            }\r\n                \r\n            scope.showPicker = function(ev) {\r\n                $mdpTimePicker(ngModel.$modelValue, {\r\n                    targetEvent: ev,\r\n                    autoSwitch: scope.autoSwitch\r\n                }).then(function(time) {\r\n                    updateTime(time, true);\r\n                });\r\n            };\r\n            \r\n            function onInputElementEvents(event) {\r\n                if(event.target.value !== ngModel.$viewVaue)\r\n                    updateTime(event.target.value);\r\n            }\r\n            \r\n            inputElement.on(\"reset input blur\", onInputElementEvents);\r\n            \r\n            scope.$on(\"$destroy\", function() {\r\n                inputElement.off(\"reset input blur\", onInputElementEvents);\r\n            })\r\n        }\r\n    };\r\n}]);\r\n\r\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", function($mdpTimePicker, $timeout) {\r\n    return  {\r\n        restrict: 'A',\r\n        require: 'ngModel',\r\n        scope: {\r\n            \"timeFormat\": \"@mdpFormat\",\r\n            \"autoSwitch\": \"=?mdpAutoSwitch\",\r\n        },\r\n        link: function(scope, element, attrs, ngModel, $transclude) {\r\n            scope.format = scope.format || \"HH:mm\";\r\n            function showPicker(ev) {\r\n                $mdpTimePicker(ngModel.$modelValue, {\r\n                    targetEvent: ev,\r\n                    autoSwitch: scope.autoSwitch\r\n                }).then(function(time) {\r\n                    ngModel.$setViewValue(moment(time).format(scope.format));\r\n                    ngModel.$render();\r\n                });\r\n            };\r\n            \r\n            element.on(\"click\", showPicker);\r\n            \r\n            scope.$on(\"$destroy\", function() {\r\n                element.off(\"click\", showPicker);\r\n            });\r\n        }\r\n    }\r\n}]);\r\n\n})();"],"sourceRoot":"/source/"}